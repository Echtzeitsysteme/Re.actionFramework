/*
 * generated by Xtext 2.20.0
 */
package org.reaction.dsl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.reaction.dsl.ide.contentassist.antlr.internal.InternalReactionLanguageParser;
import org.reaction.dsl.services.ReactionLanguageGrammarAccess;

public class ReactionLanguageParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(ReactionLanguageGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, ReactionLanguageGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getComponentAccess().getAlternatives(), "rule__Component__Alternatives");
			builder.put(grammarAccess.getComplexElementAccess().getAlternatives(), "rule__ComplexElement__Alternatives");
			builder.put(grammarAccess.getPatternAccess().getAlternatives(), "rule__Pattern__Alternatives");
			builder.put(grammarAccess.getAbstractAgentAccess().getAlternatives(), "rule__AbstractAgent__Alternatives");
			builder.put(grammarAccess.getBondSideOrWildcardAccess().getAlternatives(), "rule__BondSideOrWildcard__Alternatives");
			builder.put(grammarAccess.getWildcardAccess().getAlternatives(), "rule__Wildcard__Alternatives");
			builder.put(grammarAccess.getTerminateBodyAccess().getAlternatives(), "rule__TerminateBody__Alternatives");
			builder.put(grammarAccess.getAdditionAccess().getAlternatives_1_0(), "rule__Addition__Alternatives_1_0");
			builder.put(grammarAccess.getMultiplicationAccess().getAlternatives_1_0(), "rule__Multiplication__Alternatives_1_0");
			builder.put(grammarAccess.getPrimaryExprAccess().getAlternatives(), "rule__PrimaryExpr__Alternatives");
			builder.put(grammarAccess.getArithmeticTypeAccess().getAlternatives(), "rule__ArithmeticType__Alternatives");
			builder.put(grammarAccess.getSignedScientificDoubleAccess().getAlternatives_1(), "rule__SignedScientificDouble__Alternatives_1");
			builder.put(grammarAccess.getSignedScientificDoubleAccess().getAlternatives_2_1(), "rule__SignedScientificDouble__Alternatives_2_1");
			builder.put(grammarAccess.getSignedScientificDoubleAccess().getAlternatives_4(), "rule__SignedScientificDouble__Alternatives_4");
			builder.put(grammarAccess.getUnsignedScientificDoubleAccess().getAlternatives_0(), "rule__UnsignedScientificDouble__Alternatives_0");
			builder.put(grammarAccess.getUnsignedScientificDoubleAccess().getAlternatives_1_1(), "rule__UnsignedScientificDouble__Alternatives_1_1");
			builder.put(grammarAccess.getUnsignedScientificDoubleAccess().getAlternatives_3(), "rule__UnsignedScientificDouble__Alternatives_3");
			builder.put(grammarAccess.getUnsignedIntAccess().getAlternatives(), "rule__UnsignedInt__Alternatives");
			builder.put(grammarAccess.getSignedIntAccess().getAlternatives_1(), "rule__SignedInt__Alternatives_1");
			builder.put(grammarAccess.getUnsignedDoubleAccess().getAlternatives_0(), "rule__UnsignedDouble__Alternatives_0");
			builder.put(grammarAccess.getUnsignedDoubleAccess().getAlternatives_2(), "rule__UnsignedDouble__Alternatives_2");
			builder.put(grammarAccess.getSignedDoubleAccess().getAlternatives_1(), "rule__SignedDouble__Alternatives_1");
			builder.put(grammarAccess.getSignedDoubleAccess().getAlternatives_3(), "rule__SignedDouble__Alternatives_3");
			builder.put(grammarAccess.getMathFuncAccess().getAlternatives(), "rule__MathFunc__Alternatives");
			builder.put(grammarAccess.getRuleTypeAccess().getAlternatives(), "rule__RuleType__Alternatives");
			builder.put(grammarAccess.getBondTypeAccess().getAlternatives(), "rule__BondType__Alternatives");
			builder.put(grammarAccess.getReactionModelAccess().getGroup(), "rule__ReactionModel__Group__0");
			builder.put(grammarAccess.getReactionModelAccess().getGroup_2(), "rule__ReactionModel__Group_2__0");
			builder.put(grammarAccess.getAgentAccess().getGroup(), "rule__Agent__Group__0");
			builder.put(grammarAccess.getAgentAccess().getGroup_1(), "rule__Agent__Group_1__0");
			builder.put(grammarAccess.getAgentAccess().getGroup_1_2(), "rule__Agent__Group_1_2__0");
			builder.put(grammarAccess.getAgentDeclarationAccess().getGroup(), "rule__AgentDeclaration__Group__0");
			builder.put(grammarAccess.getAgentDeclarationAccess().getGroup_2(), "rule__AgentDeclaration__Group_2__0");
			builder.put(grammarAccess.getAgentInstanceAccess().getGroup(), "rule__AgentInstance__Group__0");
			builder.put(grammarAccess.getAgentInstanceAccess().getGroup_3(), "rule__AgentInstance__Group_3__0");
			builder.put(grammarAccess.getSiteAccess().getGroup(), "rule__Site__Group__0");
			builder.put(grammarAccess.getSiteAccess().getGroup_1(), "rule__Site__Group_1__0");
			builder.put(grammarAccess.getSiteAccess().getGroup_1_2(), "rule__Site__Group_1_2__0");
			builder.put(grammarAccess.getComplexAccess().getGroup(), "rule__Complex__Group__0");
			builder.put(grammarAccess.getSignatureAccess().getGroup(), "rule__Signature__Group__0");
			builder.put(grammarAccess.getSignatureAccess().getGroup_2(), "rule__Signature__Group_2__0");
			builder.put(grammarAccess.getRuleAccess().getGroup(), "rule__Rule__Group__0");
			builder.put(grammarAccess.getRuleHeadAccess().getGroup(), "rule__RuleHead__Group__0");
			builder.put(grammarAccess.getRuleBodyAccess().getGroup(), "rule__RuleBody__Group__0");
			builder.put(grammarAccess.getRatesAccess().getGroup(), "rule__Rates__Group__0");
			builder.put(grammarAccess.getRatesAccess().getGroup_2(), "rule__Rates__Group_2__0");
			builder.put(grammarAccess.getPatternAccess().getGroup_0(), "rule__Pattern__Group_0__0");
			builder.put(grammarAccess.getBondsAccess().getGroup(), "rule__Bonds__Group__0");
			builder.put(grammarAccess.getBondsAccess().getGroup_1(), "rule__Bonds__Group_1__0");
			builder.put(grammarAccess.getBondAccess().getGroup(), "rule__Bond__Group__0");
			builder.put(grammarAccess.getBondAccess().getGroup_1(), "rule__Bond__Group_1__0");
			builder.put(grammarAccess.getBondSideAccess().getGroup(), "rule__BondSide__Group__0");
			builder.put(grammarAccess.getBondSideAccess().getGroup_1(), "rule__BondSide__Group_1__0");
			builder.put(grammarAccess.getBondSideAccess().getGroup_2(), "rule__BondSide__Group_2__0");
			builder.put(grammarAccess.getSiteInstanceAccess().getGroup(), "rule__SiteInstance__Group__0");
			builder.put(grammarAccess.getSiteInstanceStateAccess().getGroup(), "rule__SiteInstanceState__Group__0");
			builder.put(grammarAccess.getVariableAccess().getGroup(), "rule__Variable__Group__0");
			builder.put(grammarAccess.getInitialisationAccess().getGroup(), "rule__Initialisation__Group__0");
			builder.put(grammarAccess.getInitialisationHeadAccess().getGroup(), "rule__InitialisationHead__Group__0");
			builder.put(grammarAccess.getInitialisationBodyAccess().getGroup(), "rule__InitialisationBody__Group__0");
			builder.put(grammarAccess.getObservableAccess().getGroup(), "rule__Observable__Group__0");
			builder.put(grammarAccess.getObservableArithmeticAccess().getGroup(), "rule__ObservableArithmetic__Group__0");
			builder.put(grammarAccess.getObservablePatternAccess().getGroup(), "rule__ObservablePattern__Group__0");
			builder.put(grammarAccess.getTerminateCommandAccess().getGroup(), "rule__TerminateCommand__Group__0");
			builder.put(grammarAccess.getTerminateTimeAccess().getGroup(), "rule__TerminateTime__Group__0");
			builder.put(grammarAccess.getTerminateIterationsAccess().getGroup(), "rule__TerminateIterations__Group__0");
			builder.put(grammarAccess.getTerminateCountAccess().getGroup(), "rule__TerminateCount__Group__0");
			builder.put(grammarAccess.getTerminateCountAccess().getGroup_0(), "rule__TerminateCount__Group_0__0");
			builder.put(grammarAccess.getAdditionAccess().getGroup(), "rule__Addition__Group__0");
			builder.put(grammarAccess.getAdditionAccess().getGroup_1(), "rule__Addition__Group_1__0");
			builder.put(grammarAccess.getAdditionAccess().getGroup_1_0_0(), "rule__Addition__Group_1_0_0__0");
			builder.put(grammarAccess.getAdditionAccess().getGroup_1_0_1(), "rule__Addition__Group_1_0_1__0");
			builder.put(grammarAccess.getMultiplicationAccess().getGroup(), "rule__Multiplication__Group__0");
			builder.put(grammarAccess.getMultiplicationAccess().getGroup_1(), "rule__Multiplication__Group_1__0");
			builder.put(grammarAccess.getMultiplicationAccess().getGroup_1_0_0(), "rule__Multiplication__Group_1_0_0__0");
			builder.put(grammarAccess.getMultiplicationAccess().getGroup_1_0_1(), "rule__Multiplication__Group_1_0_1__0");
			builder.put(grammarAccess.getMultiplicationAccess().getGroup_1_0_2(), "rule__Multiplication__Group_1_0_2__0");
			builder.put(grammarAccess.getPrimaryExprAccess().getGroup_0(), "rule__PrimaryExpr__Group_0__0");
			builder.put(grammarAccess.getPrimaryExprAccess().getGroup_1(), "rule__PrimaryExpr__Group_1__0");
			builder.put(grammarAccess.getPrimaryExprAccess().getGroup_2(), "rule__PrimaryExpr__Group_2__0");
			builder.put(grammarAccess.getPrimaryExprAccess().getGroup_3(), "rule__PrimaryExpr__Group_3__0");
			builder.put(grammarAccess.getSignedScientificDoubleAccess().getGroup(), "rule__SignedScientificDouble__Group__0");
			builder.put(grammarAccess.getSignedScientificDoubleAccess().getGroup_2(), "rule__SignedScientificDouble__Group_2__0");
			builder.put(grammarAccess.getUnsignedScientificDoubleAccess().getGroup(), "rule__UnsignedScientificDouble__Group__0");
			builder.put(grammarAccess.getUnsignedScientificDoubleAccess().getGroup_1(), "rule__UnsignedScientificDouble__Group_1__0");
			builder.put(grammarAccess.getSignedIntAccess().getGroup(), "rule__SignedInt__Group__0");
			builder.put(grammarAccess.getUnsignedDoubleAccess().getGroup(), "rule__UnsignedDouble__Group__0");
			builder.put(grammarAccess.getSignedDoubleAccess().getGroup(), "rule__SignedDouble__Group__0");
			builder.put(grammarAccess.getReactionModelAccess().getElementsAssignment_0(), "rule__ReactionModel__ElementsAssignment_0");
			builder.put(grammarAccess.getReactionModelAccess().getElementsAssignment_2_1(), "rule__ReactionModel__ElementsAssignment_2_1");
			builder.put(grammarAccess.getAgentAccess().getNameAssignment_0(), "rule__Agent__NameAssignment_0");
			builder.put(grammarAccess.getAgentAccess().getSitesAssignment_1_1(), "rule__Agent__SitesAssignment_1_1");
			builder.put(grammarAccess.getAgentAccess().getSitesAssignment_1_2_1(), "rule__Agent__SitesAssignment_1_2_1");
			builder.put(grammarAccess.getAgentDeclarationAccess().getDeclaredAgentsAssignment_1(), "rule__AgentDeclaration__DeclaredAgentsAssignment_1");
			builder.put(grammarAccess.getAgentDeclarationAccess().getDeclaredAgentsAssignment_2_1(), "rule__AgentDeclaration__DeclaredAgentsAssignment_2_1");
			builder.put(grammarAccess.getAgentInstanceAccess().getNameAssignment_0(), "rule__AgentInstance__NameAssignment_0");
			builder.put(grammarAccess.getAgentInstanceAccess().getInstanceOfAssignment_2(), "rule__AgentInstance__InstanceOfAssignment_2");
			builder.put(grammarAccess.getAgentInstanceAccess().getArrayAssignment_3_0(), "rule__AgentInstance__ArrayAssignment_3_0");
			builder.put(grammarAccess.getAgentInstanceAccess().getSizeAssignment_3_1(), "rule__AgentInstance__SizeAssignment_3_1");
			builder.put(grammarAccess.getSiteAccess().getNameAssignment_0(), "rule__Site__NameAssignment_0");
			builder.put(grammarAccess.getSiteAccess().getStatesAssignment_1_1(), "rule__Site__StatesAssignment_1_1");
			builder.put(grammarAccess.getSiteAccess().getStatesAssignment_1_2_1(), "rule__Site__StatesAssignment_1_2_1");
			builder.put(grammarAccess.getSiteStateAccess().getNameAssignment(), "rule__SiteState__NameAssignment");
			builder.put(grammarAccess.getComplexAccess().getSignatureAssignment_1(), "rule__Complex__SignatureAssignment_1");
			builder.put(grammarAccess.getComplexAccess().getElementsAssignment_3(), "rule__Complex__ElementsAssignment_3");
			builder.put(grammarAccess.getSignatureAccess().getInstancesAssignment_1(), "rule__Signature__InstancesAssignment_1");
			builder.put(grammarAccess.getSignatureAccess().getInstancesAssignment_2_1(), "rule__Signature__InstancesAssignment_2_1");
			builder.put(grammarAccess.getRuleAccess().getHeadAssignment_1(), "rule__Rule__HeadAssignment_1");
			builder.put(grammarAccess.getRuleAccess().getBodyAssignment_2(), "rule__Rule__BodyAssignment_2");
			builder.put(grammarAccess.getRuleHeadAccess().getNameAssignment_0(), "rule__RuleHead__NameAssignment_0");
			builder.put(grammarAccess.getRuleHeadAccess().getSignatureAssignment_1(), "rule__RuleHead__SignatureAssignment_1");
			builder.put(grammarAccess.getRuleBodyAccess().getLhsAssignment_0(), "rule__RuleBody__LhsAssignment_0");
			builder.put(grammarAccess.getRuleBodyAccess().getRuleTypeAssignment_1(), "rule__RuleBody__RuleTypeAssignment_1");
			builder.put(grammarAccess.getRuleBodyAccess().getRhsAssignment_2(), "rule__RuleBody__RhsAssignment_2");
			builder.put(grammarAccess.getRuleBodyAccess().getRatesAssignment_3(), "rule__RuleBody__RatesAssignment_3");
			builder.put(grammarAccess.getRatesAccess().getRateForwardAssignment_1(), "rule__Rates__RateForwardAssignment_1");
			builder.put(grammarAccess.getRatesAccess().getRateBackwardSetAssignment_2_0(), "rule__Rates__RateBackwardSetAssignment_2_0");
			builder.put(grammarAccess.getRatesAccess().getRateBackwardAssignment_2_1(), "rule__Rates__RateBackwardAssignment_2_1");
			builder.put(grammarAccess.getBondsAccess().getBondsAssignment_0(), "rule__Bonds__BondsAssignment_0");
			builder.put(grammarAccess.getBondsAccess().getBondsAssignment_1_1(), "rule__Bonds__BondsAssignment_1_1");
			builder.put(grammarAccess.getBondAccess().getLeftAssignment_0(), "rule__Bond__LeftAssignment_0");
			builder.put(grammarAccess.getBondAccess().getBondTypeAssignment_1_0(), "rule__Bond__BondTypeAssignment_1_0");
			builder.put(grammarAccess.getBondAccess().getRightAssignment_1_1(), "rule__Bond__RightAssignment_1_1");
			builder.put(grammarAccess.getBondSideOrWildcardAccess().getWildcardAssignment_1(), "rule__BondSideOrWildcard__WildcardAssignment_1");
			builder.put(grammarAccess.getWildcardAccess().getAnythingAssignment_0(), "rule__Wildcard__AnythingAssignment_0");
			builder.put(grammarAccess.getWildcardAccess().getNothingAssignment_1(), "rule__Wildcard__NothingAssignment_1");
			builder.put(grammarAccess.getBondSideAccess().getAbstractAgentAssignment_0(), "rule__BondSide__AbstractAgentAssignment_0");
			builder.put(grammarAccess.getBondSideAccess().getArrayAssignment_1_0(), "rule__BondSide__ArrayAssignment_1_0");
			builder.put(grammarAccess.getBondSideAccess().getIndexAssignment_1_1(), "rule__BondSide__IndexAssignment_1_1");
			builder.put(grammarAccess.getBondSideAccess().getSiteInstanceAssignment_2_1(), "rule__BondSide__SiteInstanceAssignment_2_1");
			builder.put(grammarAccess.getSiteInstanceAccess().getSiteAssignment_0(), "rule__SiteInstance__SiteAssignment_0");
			builder.put(grammarAccess.getSiteInstanceAccess().getSiteStateAssignment_1(), "rule__SiteInstance__SiteStateAssignment_1");
			builder.put(grammarAccess.getSiteInstanceStateAccess().getStateAssignment_1(), "rule__SiteInstanceState__StateAssignment_1");
			builder.put(grammarAccess.getVariableAccess().getNameAssignment_1(), "rule__Variable__NameAssignment_1");
			builder.put(grammarAccess.getVariableAccess().getValueAssignment_3(), "rule__Variable__ValueAssignment_3");
			builder.put(grammarAccess.getInitialisationAccess().getHeadAssignment_0(), "rule__Initialisation__HeadAssignment_0");
			builder.put(grammarAccess.getInitialisationAccess().getBodyAssignment_1(), "rule__Initialisation__BodyAssignment_1");
			builder.put(grammarAccess.getInitialisationHeadAccess().getCntAssignment_1(), "rule__InitialisationHead__CntAssignment_1");
			builder.put(grammarAccess.getInitialisationBodyAccess().getSignatureAssignment_0(), "rule__InitialisationBody__SignatureAssignment_0");
			builder.put(grammarAccess.getInitialisationBodyAccess().getPatternAssignment_2(), "rule__InitialisationBody__PatternAssignment_2");
			builder.put(grammarAccess.getObservableAccess().getNameAssignment_1(), "rule__Observable__NameAssignment_1");
			builder.put(grammarAccess.getObservableAccess().getBodyAssignment_2(), "rule__Observable__BodyAssignment_2");
			builder.put(grammarAccess.getObservableArithmeticAccess().getExprAssignment_1(), "rule__ObservableArithmetic__ExprAssignment_1");
			builder.put(grammarAccess.getObservablePatternAccess().getSignatureAssignment_0(), "rule__ObservablePattern__SignatureAssignment_0");
			builder.put(grammarAccess.getObservablePatternAccess().getPatternAssignment_2(), "rule__ObservablePattern__PatternAssignment_2");
			builder.put(grammarAccess.getTerminateTimeAccess().getTimeAssignment_2(), "rule__TerminateTime__TimeAssignment_2");
			builder.put(grammarAccess.getTerminateIterationsAccess().getIterationsAssignment_2(), "rule__TerminateIterations__IterationsAssignment_2");
			builder.put(grammarAccess.getTerminateCountAccess().getSignatureAssignment_0_0(), "rule__TerminateCount__SignatureAssignment_0_0");
			builder.put(grammarAccess.getTerminateCountAccess().getPatternAssignment_1(), "rule__TerminateCount__PatternAssignment_1");
			builder.put(grammarAccess.getTerminateCountAccess().getCntAssignment_4(), "rule__TerminateCount__CntAssignment_4");
			builder.put(grammarAccess.getAdditionAccess().getRightAssignment_1_1(), "rule__Addition__RightAssignment_1_1");
			builder.put(grammarAccess.getMultiplicationAccess().getRightAssignment_1_1(), "rule__Multiplication__RightAssignment_1_1");
			builder.put(grammarAccess.getPrimaryExprAccess().getValueAssignment_1_1(), "rule__PrimaryExpr__ValueAssignment_1_1");
			builder.put(grammarAccess.getPrimaryExprAccess().getFuncAssignment_2_1(), "rule__PrimaryExpr__FuncAssignment_2_1");
			builder.put(grammarAccess.getPrimaryExprAccess().getExprAssignment_2_3(), "rule__PrimaryExpr__ExprAssignment_2_3");
			builder.put(grammarAccess.getPrimaryExprAccess().getRefAssignment_3_1(), "rule__PrimaryExpr__RefAssignment_3_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private ReactionLanguageGrammarAccess grammarAccess;

	@Override
	protected InternalReactionLanguageParser createParser() {
		InternalReactionLanguageParser result = new InternalReactionLanguageParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public ReactionLanguageGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(ReactionLanguageGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
