/**
 * generated by Xtext 2.20.0
 */
package org.reaction.dsl.reactionLanguage.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.reaction.dsl.reactionLanguage.Pattern;
import org.reaction.dsl.reactionLanguage.Rates;
import org.reaction.dsl.reactionLanguage.ReactionLanguagePackage;
import org.reaction.dsl.reactionLanguage.RuleBody;
import org.reaction.dsl.reactionLanguage.RuleType;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Rule Body</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.reaction.dsl.reactionLanguage.impl.RuleBodyImpl#getLhs <em>Lhs</em>}</li>
 *   <li>{@link org.reaction.dsl.reactionLanguage.impl.RuleBodyImpl#getRuleType <em>Rule Type</em>}</li>
 *   <li>{@link org.reaction.dsl.reactionLanguage.impl.RuleBodyImpl#getRhs <em>Rhs</em>}</li>
 *   <li>{@link org.reaction.dsl.reactionLanguage.impl.RuleBodyImpl#getRates <em>Rates</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RuleBodyImpl extends MinimalEObjectImpl.Container implements RuleBody
{
  /**
   * The cached value of the '{@link #getLhs() <em>Lhs</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLhs()
   * @generated
   * @ordered
   */
  protected Pattern lhs;

  /**
   * The default value of the '{@link #getRuleType() <em>Rule Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRuleType()
   * @generated
   * @ordered
   */
  protected static final RuleType RULE_TYPE_EDEFAULT = RuleType.UNI;

  /**
   * The cached value of the '{@link #getRuleType() <em>Rule Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRuleType()
   * @generated
   * @ordered
   */
  protected RuleType ruleType = RULE_TYPE_EDEFAULT;

  /**
   * The cached value of the '{@link #getRhs() <em>Rhs</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRhs()
   * @generated
   * @ordered
   */
  protected Pattern rhs;

  /**
   * The cached value of the '{@link #getRates() <em>Rates</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRates()
   * @generated
   * @ordered
   */
  protected Rates rates;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RuleBodyImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ReactionLanguagePackage.Literals.RULE_BODY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Pattern getLhs()
  {
    return lhs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLhs(Pattern newLhs, NotificationChain msgs)
  {
    Pattern oldLhs = lhs;
    lhs = newLhs;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ReactionLanguagePackage.RULE_BODY__LHS, oldLhs, newLhs);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLhs(Pattern newLhs)
  {
    if (newLhs != lhs)
    {
      NotificationChain msgs = null;
      if (lhs != null)
        msgs = ((InternalEObject)lhs).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ReactionLanguagePackage.RULE_BODY__LHS, null, msgs);
      if (newLhs != null)
        msgs = ((InternalEObject)newLhs).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ReactionLanguagePackage.RULE_BODY__LHS, null, msgs);
      msgs = basicSetLhs(newLhs, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReactionLanguagePackage.RULE_BODY__LHS, newLhs, newLhs));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RuleType getRuleType()
  {
    return ruleType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRuleType(RuleType newRuleType)
  {
    RuleType oldRuleType = ruleType;
    ruleType = newRuleType == null ? RULE_TYPE_EDEFAULT : newRuleType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReactionLanguagePackage.RULE_BODY__RULE_TYPE, oldRuleType, ruleType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Pattern getRhs()
  {
    return rhs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRhs(Pattern newRhs, NotificationChain msgs)
  {
    Pattern oldRhs = rhs;
    rhs = newRhs;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ReactionLanguagePackage.RULE_BODY__RHS, oldRhs, newRhs);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRhs(Pattern newRhs)
  {
    if (newRhs != rhs)
    {
      NotificationChain msgs = null;
      if (rhs != null)
        msgs = ((InternalEObject)rhs).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ReactionLanguagePackage.RULE_BODY__RHS, null, msgs);
      if (newRhs != null)
        msgs = ((InternalEObject)newRhs).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ReactionLanguagePackage.RULE_BODY__RHS, null, msgs);
      msgs = basicSetRhs(newRhs, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReactionLanguagePackage.RULE_BODY__RHS, newRhs, newRhs));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Rates getRates()
  {
    return rates;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRates(Rates newRates, NotificationChain msgs)
  {
    Rates oldRates = rates;
    rates = newRates;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ReactionLanguagePackage.RULE_BODY__RATES, oldRates, newRates);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRates(Rates newRates)
  {
    if (newRates != rates)
    {
      NotificationChain msgs = null;
      if (rates != null)
        msgs = ((InternalEObject)rates).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ReactionLanguagePackage.RULE_BODY__RATES, null, msgs);
      if (newRates != null)
        msgs = ((InternalEObject)newRates).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ReactionLanguagePackage.RULE_BODY__RATES, null, msgs);
      msgs = basicSetRates(newRates, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReactionLanguagePackage.RULE_BODY__RATES, newRates, newRates));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ReactionLanguagePackage.RULE_BODY__LHS:
        return basicSetLhs(null, msgs);
      case ReactionLanguagePackage.RULE_BODY__RHS:
        return basicSetRhs(null, msgs);
      case ReactionLanguagePackage.RULE_BODY__RATES:
        return basicSetRates(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ReactionLanguagePackage.RULE_BODY__LHS:
        return getLhs();
      case ReactionLanguagePackage.RULE_BODY__RULE_TYPE:
        return getRuleType();
      case ReactionLanguagePackage.RULE_BODY__RHS:
        return getRhs();
      case ReactionLanguagePackage.RULE_BODY__RATES:
        return getRates();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ReactionLanguagePackage.RULE_BODY__LHS:
        setLhs((Pattern)newValue);
        return;
      case ReactionLanguagePackage.RULE_BODY__RULE_TYPE:
        setRuleType((RuleType)newValue);
        return;
      case ReactionLanguagePackage.RULE_BODY__RHS:
        setRhs((Pattern)newValue);
        return;
      case ReactionLanguagePackage.RULE_BODY__RATES:
        setRates((Rates)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ReactionLanguagePackage.RULE_BODY__LHS:
        setLhs((Pattern)null);
        return;
      case ReactionLanguagePackage.RULE_BODY__RULE_TYPE:
        setRuleType(RULE_TYPE_EDEFAULT);
        return;
      case ReactionLanguagePackage.RULE_BODY__RHS:
        setRhs((Pattern)null);
        return;
      case ReactionLanguagePackage.RULE_BODY__RATES:
        setRates((Rates)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ReactionLanguagePackage.RULE_BODY__LHS:
        return lhs != null;
      case ReactionLanguagePackage.RULE_BODY__RULE_TYPE:
        return ruleType != RULE_TYPE_EDEFAULT;
      case ReactionLanguagePackage.RULE_BODY__RHS:
        return rhs != null;
      case ReactionLanguagePackage.RULE_BODY__RATES:
        return rates != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (ruleType: ");
    result.append(ruleType);
    result.append(')');
    return result.toString();
  }

} //RuleBodyImpl
