/**
 * generated by Xtext 2.20.0
 */
package org.reaction.dsl.reactionLanguage.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.reaction.dsl.reactionLanguage.ArithmeticExpr;
import org.reaction.dsl.reactionLanguage.Pattern;
import org.reaction.dsl.reactionLanguage.ReactionLanguagePackage;
import org.reaction.dsl.reactionLanguage.Signature;
import org.reaction.dsl.reactionLanguage.TerminateCount;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Terminate Count</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.reaction.dsl.reactionLanguage.impl.TerminateCountImpl#getSignature <em>Signature</em>}</li>
 *   <li>{@link org.reaction.dsl.reactionLanguage.impl.TerminateCountImpl#getPattern <em>Pattern</em>}</li>
 *   <li>{@link org.reaction.dsl.reactionLanguage.impl.TerminateCountImpl#getCnt <em>Cnt</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TerminateCountImpl extends TerminateBodyImpl implements TerminateCount
{
  /**
   * The cached value of the '{@link #getSignature() <em>Signature</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSignature()
   * @generated
   * @ordered
   */
  protected Signature signature;

  /**
   * The cached value of the '{@link #getPattern() <em>Pattern</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPattern()
   * @generated
   * @ordered
   */
  protected Pattern pattern;

  /**
   * The cached value of the '{@link #getCnt() <em>Cnt</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCnt()
   * @generated
   * @ordered
   */
  protected ArithmeticExpr cnt;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TerminateCountImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ReactionLanguagePackage.Literals.TERMINATE_COUNT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Signature getSignature()
  {
    return signature;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSignature(Signature newSignature, NotificationChain msgs)
  {
    Signature oldSignature = signature;
    signature = newSignature;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ReactionLanguagePackage.TERMINATE_COUNT__SIGNATURE, oldSignature, newSignature);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSignature(Signature newSignature)
  {
    if (newSignature != signature)
    {
      NotificationChain msgs = null;
      if (signature != null)
        msgs = ((InternalEObject)signature).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ReactionLanguagePackage.TERMINATE_COUNT__SIGNATURE, null, msgs);
      if (newSignature != null)
        msgs = ((InternalEObject)newSignature).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ReactionLanguagePackage.TERMINATE_COUNT__SIGNATURE, null, msgs);
      msgs = basicSetSignature(newSignature, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReactionLanguagePackage.TERMINATE_COUNT__SIGNATURE, newSignature, newSignature));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Pattern getPattern()
  {
    return pattern;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPattern(Pattern newPattern, NotificationChain msgs)
  {
    Pattern oldPattern = pattern;
    pattern = newPattern;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ReactionLanguagePackage.TERMINATE_COUNT__PATTERN, oldPattern, newPattern);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPattern(Pattern newPattern)
  {
    if (newPattern != pattern)
    {
      NotificationChain msgs = null;
      if (pattern != null)
        msgs = ((InternalEObject)pattern).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ReactionLanguagePackage.TERMINATE_COUNT__PATTERN, null, msgs);
      if (newPattern != null)
        msgs = ((InternalEObject)newPattern).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ReactionLanguagePackage.TERMINATE_COUNT__PATTERN, null, msgs);
      msgs = basicSetPattern(newPattern, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReactionLanguagePackage.TERMINATE_COUNT__PATTERN, newPattern, newPattern));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ArithmeticExpr getCnt()
  {
    return cnt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCnt(ArithmeticExpr newCnt, NotificationChain msgs)
  {
    ArithmeticExpr oldCnt = cnt;
    cnt = newCnt;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ReactionLanguagePackage.TERMINATE_COUNT__CNT, oldCnt, newCnt);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCnt(ArithmeticExpr newCnt)
  {
    if (newCnt != cnt)
    {
      NotificationChain msgs = null;
      if (cnt != null)
        msgs = ((InternalEObject)cnt).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ReactionLanguagePackage.TERMINATE_COUNT__CNT, null, msgs);
      if (newCnt != null)
        msgs = ((InternalEObject)newCnt).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ReactionLanguagePackage.TERMINATE_COUNT__CNT, null, msgs);
      msgs = basicSetCnt(newCnt, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReactionLanguagePackage.TERMINATE_COUNT__CNT, newCnt, newCnt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ReactionLanguagePackage.TERMINATE_COUNT__SIGNATURE:
        return basicSetSignature(null, msgs);
      case ReactionLanguagePackage.TERMINATE_COUNT__PATTERN:
        return basicSetPattern(null, msgs);
      case ReactionLanguagePackage.TERMINATE_COUNT__CNT:
        return basicSetCnt(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ReactionLanguagePackage.TERMINATE_COUNT__SIGNATURE:
        return getSignature();
      case ReactionLanguagePackage.TERMINATE_COUNT__PATTERN:
        return getPattern();
      case ReactionLanguagePackage.TERMINATE_COUNT__CNT:
        return getCnt();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ReactionLanguagePackage.TERMINATE_COUNT__SIGNATURE:
        setSignature((Signature)newValue);
        return;
      case ReactionLanguagePackage.TERMINATE_COUNT__PATTERN:
        setPattern((Pattern)newValue);
        return;
      case ReactionLanguagePackage.TERMINATE_COUNT__CNT:
        setCnt((ArithmeticExpr)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ReactionLanguagePackage.TERMINATE_COUNT__SIGNATURE:
        setSignature((Signature)null);
        return;
      case ReactionLanguagePackage.TERMINATE_COUNT__PATTERN:
        setPattern((Pattern)null);
        return;
      case ReactionLanguagePackage.TERMINATE_COUNT__CNT:
        setCnt((ArithmeticExpr)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ReactionLanguagePackage.TERMINATE_COUNT__SIGNATURE:
        return signature != null;
      case ReactionLanguagePackage.TERMINATE_COUNT__PATTERN:
        return pattern != null;
      case ReactionLanguagePackage.TERMINATE_COUNT__CNT:
        return cnt != null;
    }
    return super.eIsSet(featureID);
  }

} //TerminateCountImpl
