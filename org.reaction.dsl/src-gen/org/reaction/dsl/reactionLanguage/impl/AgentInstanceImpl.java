/**
 * generated by Xtext 2.20.0
 */
package org.reaction.dsl.reactionLanguage.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.reaction.dsl.reactionLanguage.Agent;
import org.reaction.dsl.reactionLanguage.AgentInstance;
import org.reaction.dsl.reactionLanguage.ReactionLanguagePackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Agent Instance</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.reaction.dsl.reactionLanguage.impl.AgentInstanceImpl#getInstanceOf <em>Instance Of</em>}</li>
 *   <li>{@link org.reaction.dsl.reactionLanguage.impl.AgentInstanceImpl#isArray <em>Array</em>}</li>
 *   <li>{@link org.reaction.dsl.reactionLanguage.impl.AgentInstanceImpl#getSize <em>Size</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AgentInstanceImpl extends AbstractAgentImpl implements AgentInstance
{
  /**
   * The cached value of the '{@link #getInstanceOf() <em>Instance Of</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInstanceOf()
   * @generated
   * @ordered
   */
  protected Agent instanceOf;

  /**
   * The default value of the '{@link #isArray() <em>Array</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isArray()
   * @generated
   * @ordered
   */
  protected static final boolean ARRAY_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isArray() <em>Array</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isArray()
   * @generated
   * @ordered
   */
  protected boolean array = ARRAY_EDEFAULT;

  /**
   * The default value of the '{@link #getSize() <em>Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSize()
   * @generated
   * @ordered
   */
  protected static final int SIZE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getSize() <em>Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSize()
   * @generated
   * @ordered
   */
  protected int size = SIZE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AgentInstanceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ReactionLanguagePackage.Literals.AGENT_INSTANCE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Agent getInstanceOf()
  {
    if (instanceOf != null && instanceOf.eIsProxy())
    {
      InternalEObject oldInstanceOf = (InternalEObject)instanceOf;
      instanceOf = (Agent)eResolveProxy(oldInstanceOf);
      if (instanceOf != oldInstanceOf)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, ReactionLanguagePackage.AGENT_INSTANCE__INSTANCE_OF, oldInstanceOf, instanceOf));
      }
    }
    return instanceOf;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Agent basicGetInstanceOf()
  {
    return instanceOf;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInstanceOf(Agent newInstanceOf)
  {
    Agent oldInstanceOf = instanceOf;
    instanceOf = newInstanceOf;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReactionLanguagePackage.AGENT_INSTANCE__INSTANCE_OF, oldInstanceOf, instanceOf));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isArray()
  {
    return array;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setArray(boolean newArray)
  {
    boolean oldArray = array;
    array = newArray;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReactionLanguagePackage.AGENT_INSTANCE__ARRAY, oldArray, array));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getSize()
  {
    return size;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSize(int newSize)
  {
    int oldSize = size;
    size = newSize;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReactionLanguagePackage.AGENT_INSTANCE__SIZE, oldSize, size));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ReactionLanguagePackage.AGENT_INSTANCE__INSTANCE_OF:
        if (resolve) return getInstanceOf();
        return basicGetInstanceOf();
      case ReactionLanguagePackage.AGENT_INSTANCE__ARRAY:
        return isArray();
      case ReactionLanguagePackage.AGENT_INSTANCE__SIZE:
        return getSize();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ReactionLanguagePackage.AGENT_INSTANCE__INSTANCE_OF:
        setInstanceOf((Agent)newValue);
        return;
      case ReactionLanguagePackage.AGENT_INSTANCE__ARRAY:
        setArray((Boolean)newValue);
        return;
      case ReactionLanguagePackage.AGENT_INSTANCE__SIZE:
        setSize((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ReactionLanguagePackage.AGENT_INSTANCE__INSTANCE_OF:
        setInstanceOf((Agent)null);
        return;
      case ReactionLanguagePackage.AGENT_INSTANCE__ARRAY:
        setArray(ARRAY_EDEFAULT);
        return;
      case ReactionLanguagePackage.AGENT_INSTANCE__SIZE:
        setSize(SIZE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ReactionLanguagePackage.AGENT_INSTANCE__INSTANCE_OF:
        return instanceOf != null;
      case ReactionLanguagePackage.AGENT_INSTANCE__ARRAY:
        return array != ARRAY_EDEFAULT;
      case ReactionLanguagePackage.AGENT_INSTANCE__SIZE:
        return size != SIZE_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (array: ");
    result.append(array);
    result.append(", size: ");
    result.append(size);
    result.append(')');
    return result.toString();
  }

} //AgentInstanceImpl
