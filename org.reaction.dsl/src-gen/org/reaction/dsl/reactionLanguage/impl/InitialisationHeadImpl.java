/**
 * generated by Xtext 2.20.0
 */
package org.reaction.dsl.reactionLanguage.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.reaction.dsl.reactionLanguage.ArithmeticExpr;
import org.reaction.dsl.reactionLanguage.InitialisationHead;
import org.reaction.dsl.reactionLanguage.ReactionLanguagePackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Initialisation Head</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.reaction.dsl.reactionLanguage.impl.InitialisationHeadImpl#getCnt <em>Cnt</em>}</li>
 * </ul>
 *
 * @generated
 */
public class InitialisationHeadImpl extends MinimalEObjectImpl.Container implements InitialisationHead
{
  /**
   * The cached value of the '{@link #getCnt() <em>Cnt</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCnt()
   * @generated
   * @ordered
   */
  protected ArithmeticExpr cnt;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected InitialisationHeadImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ReactionLanguagePackage.Literals.INITIALISATION_HEAD;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ArithmeticExpr getCnt()
  {
    return cnt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCnt(ArithmeticExpr newCnt, NotificationChain msgs)
  {
    ArithmeticExpr oldCnt = cnt;
    cnt = newCnt;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ReactionLanguagePackage.INITIALISATION_HEAD__CNT, oldCnt, newCnt);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCnt(ArithmeticExpr newCnt)
  {
    if (newCnt != cnt)
    {
      NotificationChain msgs = null;
      if (cnt != null)
        msgs = ((InternalEObject)cnt).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ReactionLanguagePackage.INITIALISATION_HEAD__CNT, null, msgs);
      if (newCnt != null)
        msgs = ((InternalEObject)newCnt).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ReactionLanguagePackage.INITIALISATION_HEAD__CNT, null, msgs);
      msgs = basicSetCnt(newCnt, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReactionLanguagePackage.INITIALISATION_HEAD__CNT, newCnt, newCnt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ReactionLanguagePackage.INITIALISATION_HEAD__CNT:
        return basicSetCnt(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ReactionLanguagePackage.INITIALISATION_HEAD__CNT:
        return getCnt();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ReactionLanguagePackage.INITIALISATION_HEAD__CNT:
        setCnt((ArithmeticExpr)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ReactionLanguagePackage.INITIALISATION_HEAD__CNT:
        setCnt((ArithmeticExpr)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ReactionLanguagePackage.INITIALISATION_HEAD__CNT:
        return cnt != null;
    }
    return super.eIsSet(featureID);
  }

} //InitialisationHeadImpl
